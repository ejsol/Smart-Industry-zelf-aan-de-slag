
These are the files belonging to the Zelf-aan-de-Slag data & cyber security Smart Industry workshop
SIZAS = Smart Industry Zelf Aan de Slag, or in English Smart Industry - Do It Yourself (SIDIY)

At top level there is the PDF with the presentation and the two participants instruction documents with all the needed
settings for the RevPi and the Pi sessions. Available upon request as github does not support such files.
There is a third document describing the hack cases. That document is not generally available.


In the RevPi directory you find the example code Rev-1 till Rev-3 to run on a RevPi (10.0.0.2 (Core 1 type))
and Rev3-1 till Rev3-4-server your run on the Rev3 at 192.168.0.3 (Core 3 RevPi)) in the shielded smart-factory net.
(see README in Network directory)

You start the first three programs (Rev-1 till Rev-3) from you own PC using RevPi Python Control program  (revpipycontrol)
These programs requires that the RevPi runs the revpimodio2 service from revpimodio.org, if not, then on
pi@RevPi:$ sudo service revpipyload start)

The Rev3-1-.. and Rev3-2-... you can run in the windows mode of the Rev3 using a screen/keyboard/mouse as an example
of a PLC with an operator dashboard/interface to control the PLC with the switches and with the screen pushbutton (2)

The Rev3-3-MQTT is an MQTT version, not further used as we focus on OPC, where the operator dashboard is combined with
sensing the PLC status to an MQTT broker. Then from that broker MQTT apps and monitoring programs as MQTT.fx can be used.

The python example programs Rev3-... requires that there is no other program running on the RevPi controlling
the same I/O (i.e. you should stop the running program from revpipycontrol.exe)  (or $kill -HUP id-of-revpipy)

Rev3-4-server is the OPC server program that runs in your Rev3. It does not require a screen/keyboard/mouse, so it must
be started from the prompt or ssh connection, but you can also start it from within a windows environment.
Rev3-4-192-.. is the client in the smart-factory 192.168.0.0/24 network and run from your PC wired to the same 192-network.
Rev3-4-10-.. with a client running on a PC in the 10.0.0.0/24 network and which access the firewall
at 10.0.0.254 op port 54840 to be dstnat-ed to 192.168.0.0/24 network to the OPC server at the Rev3 at 192.168.0.4:4840

In the Pi directory you find the example code for using the PI as an I/O device and OPC-server.
For the OPC application you need two computers, on 10.0.0.4 the server (the Pi with the Seeed Grove I/O) and in the same
10.0.0.0/24 network a client running on your own computer. As the participant Pi with the I/O and server will be numbered
10.0.0.11-16, you need to adapt in the source code in grove-2-opc-client-on-10net from the 10.0.0.4 to
your 10.0.0.1x IP numbers of your server/Seeed-grove Pi.

Finally, you can start on the 10.0.0.4 also Node-Red with pi@Pi-4:$ node-red-start. It will start in a terminal box,
and once running you can open the webbrowser at localhost:1880, have the revpi.json loaded, and open an second webwindow
using localhost:1880/ui to see the dashboard (optionally after selecting at the localhost:1880 screen the deploy button)
Stop node-red by opening an extra terminal window and type $ node-red-stop.

Egbert-Jan.Sol@TNO.nl

